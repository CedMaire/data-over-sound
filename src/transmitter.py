import synthesizer as Synthesizer
import matplotlib.pyplot as Plot
import sounddevice as SoundDevice
import lib as Lib
import numpy as Numpy
from scipy.io import wavfile as WavFile

if __name__ == "__main__":
    synthesizer = Synthesizer.Synthesizer()

    vectorsToSend = [[0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0],
                     [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0],
                     [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0],
                     [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0],
                     [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1],
                     [0], [1], [0], [1], [0], [1], [0], [1]]
    print("vectorsToSend")
    print(vectorsToSend)
    # print(len(vectorsToSend))

    nonoise = 1
    #signalToSend1 = synthesizer.generateCompleteSignal(vectorsToSend[0,1020], nonoise)
    #signalToSend2 = synthesizer.generateCompleteSignal(vectorsToSend[1020,2040], nonoise)
    #signalToSend=Numpy.concatenate([signalToSend1,signalToSend2])
    print("RECORDING!")
    # recording = synthesizer.recordSignal()
    # Numpy.save("nonoise2_2040_4", recording)
    recording = Numpy.load("nonoise1_2040_4.npy")

    # recording = Numpy.array(
    #     list(map(lambda x: 0 if (abs(x) < Lib.MAGIC_THRESHOLD) else x, recording.tolist())))
    signalToSend = recording

    # WavFile.write("nonoise2.wav", Lib.FS, signalToSend)
    print("SAVED")

    Plot.plot(signalToSend)
    Plot.show()

    data,stop = synthesizer.extractDataSignal(signalToSend)
    data2,s=synthesizer.extractDataSignal(signalToSend[stop:len(signalToSend)])
    data=Numpy.concatenate([data,data2])
    Plot.plot(data)
    Plot.show()
    receivedVectors = synthesizer.decodeSignalToBitVectors(data, nonoise)
    print("receivedVectors")
    print(receivedVectors)

    flattenReal = Numpy.array(vectorsToSend).flatten()
    flattenDecoded = Numpy.array(receivedVectors).flatten()
    zipped = zip(flattenReal.tolist(), flattenDecoded.tolist())
    compared = list(map(lambda x: 0 if x[0] == x[1] else 1, zipped))
    counted = Numpy.sum(Numpy.array(compared))
    print("ERRORS: ", counted)

    # SoundDevice.play(signalToSend, Lib.FS, blocking=True)
